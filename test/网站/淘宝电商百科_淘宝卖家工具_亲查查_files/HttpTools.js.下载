/**
 *  网络请求  工具类
 */
document.write("<script  src='/javascripts/aes.js'></script>");
document.write("<script  src='/javascripts/mode-ecb.js'></script>");

var prefix = 'qinchacha666_666';  // 存储

var isSB = true;  // 是否加密
var testing = 1; //  0 不显示测试日志， 显示测试日志 1 ,
var is_stop = false;


/**
 * 执行网络请求
 * @param http post,put() delete,get(拼接参数)
 * @param url
 * @param parmars
 * @param callBack
 */
function HttpTool(http, url, parmars, callBack, errBack) {

    //test
    //   console.log('startTime =>', MyTimeFromat(new Date().getTime(), 'HH:mm:ss'), '\niS =>', isSB, '\nhttp =>', http, '\nurl =>', url, '\nparmars =>', parmars);
    if (http != 'post' && http != 'put' && http != 'delete' && http != 'get') {
        alert('请求参数错误');
        return
    }
    var formData = '';
    if (http == 'post' || http == 'put') {
        formData = new FormData();
        for (var key in parmars) {
            var value = parmars[key];
            if (typeof value != 'string' && isContains(value.type, 'image/')) {  // 文件
                formData.append(key, value);
            } else {
                if (isSB) {
                    formData.append(key, AESEncrypt(value + ''));
                } else {
                    formData.append(key, value);
                }
            }
        }
    } else if (http == 'get' || http == 'delete') {
        var nowTime = new Date().getTime();
        parmars['now'] = nowTime;
        url = url + buildGetParms(parmars);
    }
    loading()
    $.ajax({
        url: url,
        type: http,
        contentType: "application/x-www-form-urlencoded",
        dataType: "text",
        headers: {
            testing: isSB ? AESEncrypt(testing + '') : testing,
            encry: isSB ? 1 : 0,
        },
        timeout: 30000,
        data: formData,
        processData: false,//data数据是否转为字符串数据
        contentType: false,
        success: function (data) {
            hideLoad()
            if (data && data.indexOf('<script>') >= 0 && data.indexOf('</script>') >= 0) {
                data = data.replace('<script>', '');  //去掉标签
                data = data.replace('</script>', ''); //
                data = data.replace(/\'/g, "");  //  去掉单引号
                data = data.replace(/\"/g, "");  //  去掉双引号
                var arr = data.split('=');
                top.window.location = arr[1];
                return
            }
            if (isSB) {
                data = AESDecrypt(data);
            }
            data = JSON.parse(data);
            //   console.log('endTime =>', MyTimeFromat(new Date().getTime(), 'HH:mm:ss'), '\ndata =>', data);
            if (data.code == 0) {
                callBack && callBack(true, data.data);
            } else {
                callBack && callBack(false, data.message);
            }
        },
        error: function (xhr, textStatus) {
            hideLoad()
            callBack && callBack(false, '数据异常');
            //   console.log(xhr, textStatus)
        }
    })
}


/**
 * 拼接 get 方式的参数
 * @param params
 */
function buildGetParms(params) {
    var get = '?';
    if (typeof params == 'object') {
        for (var key in params) {
            var value = params[key] + '';
            if (isSB) {
                get += key + '=' + encodeURIComponent(AESEncrypt(value)) + '&'
            } else {
                get += key + '=' + value + '&'
            }
        }
        return get;
    } else {
        //// //   console.log('00000')
        return get;
    }
}


function mergeJson(newJson, resultJson) {
    for (var key in newJson) {
        var value = newJson[key];
        resultJson[key] = value;
    }
    return resultJson;
}


function copyJson(newJson) {
    if (isNull(newJson)) {
        // //// //   console.log(newJson);
        return newJson
    } else {
        return JSON.parse(JSON.stringify(newJson));
    }
}


function is_json(obj) {
    var isjson = typeof (obj) == "object" && Object.prototype.toString.call(obj).toLowerCase() == "[object object]" && !obj.length;
    return isjson;
}


/**
 * 保存登录信息
 * @param uid
 * @param nick
 * @param icon
 */

function saveLoginInfo(info) {
    // localStorage.setItem(prefix + 'user', JSON.stringify(info));
}

/**
 * 获取用户信息
 */
function getLoginInfo() {
    var info = JSON.parse(localStorage.getItem(prefix + 'user'));
    return info;
}

/**
 *  检测手机号码 合法性
 * @param phone
 */
function checkPhone(phone) {
    if (this.isNull(phone)) {
        return false;
    }

    if (phone.length != 11) {
        return false;
    }
    var re = /^1(3|4|5|6|7|8|9)\d{9}$/;
    if (!re.test(phone)) {
        return false;
    }
    return true
}

function isNumberSc(str) {
    var cc = /^[0-9]+$/;
    var resCc = cc.test(str);
    return resCc;
}

/**
 * 字符串是否包含字母加数字
 * @param str
 */
function isNumberAndWord(str) {

    var num = /\d+/; //验证0-9的任意数字最少出现1次。
    var word = /[a-zA-Z]+/; //验证大小写26个字母任意字母最少出现1次
    var resNum = num.test(str);//true,说明有数字
    var resWord = word.test(str);//true,说明有英文字母
    return resWord && resNum;
}


/**
 * 字符串是否空
 * @param str
 * @returns {boolean}  true  空  false非空
 */

function isNull(str) {

    if (typeof (str) == "undefined") {
        return true;
    }
    if (str == "") return true;
    if (str == null) return true;
    if (str == 'null') return true;
    var regu = "^[ ]+$";
    var re = new RegExp(regu);
    return re.test(str);
}

//去除前后空格
function trim(str) {
    return str.replace(/(^\s*)|(\s*$)/g, "");
}

/**
 * 存储数据
 * @param key
 * @param value
 */
function setLocalStorage(key, value) {
    localStorage.setItem(prefix + key, value);
};


/**
 * 获取数据
 * @param key
 */
function getLocalStorage(key) {
    return localStorage.getItem(prefix + key);
}

/*
 * 关闭所有layer弹框
 *
 * */
function offLayer() {
    layer.closeAll();
}

/**
 * 设置推广码
 * @param code
 */
function setInvCode(code) {
    setLocalStorage('inv_code', code)
}

/**
 * 获取推广码
 * @returns {*}
 */
function getInvCode() {
    var code = getLocalStorage('inv_code');
    if (isNull(code)) {
        code = '';
    }
    return code;
}

/*乘法*/
function accMul(arg1, arg2) {
    var m = 0, s1 = arg1.toString(), s2 = arg2.toString();
    try {
        m += s1.split(".")[1].length
    } catch (e) {
    }
    try {
        m += s2.split(".")[1].length
    } catch (e) {
    }
    return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m)
}

/**
 * 获取uuid
 * @returns {string}
 */
function generateUUID() {
    var uuid = this.getLocalStorage('uuid');
    if (!this.isNull(uuid)) {
        return uuid;
    }
    var d = new Date().getTime();
    uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
    uuid = '!qcc' + uuid + Math.random();
    this.setLocalStorage('uuid', uuid)
    return uuid;
};

/**
 * 判断是否是URL
 * @param tagUrl
 * @param parma
 * @returns {null}
 */
function checkUrl(urlString) {
    if (urlString != "") {
        var reg = /(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#])?/;
        if (!reg.test(urlString)) {
            return false;
        } else {
            return true;
        }
    }
}

/**
 * 解析 url的 参数
 * @param tagUrl
 * @param parma
 * @returns {null}
 */
function getQueryString(tagUrl, parma) {
    var reg = new RegExp("(^|&)" + parma + "=([^&]*)(&|$)", "i");
    var r = tagUrl.substr(1).match(reg);
    if (r != null) return unescape(r[2]);
    return null;
}

/*
 加载中
 * */
function loading() {
    layer.ready(
        layer.load(2, {shade: 0})
    );
}

function hideLoad() {
    layer.closeAll('loading');
}

/**
 *  生成验证码
 * @returns {string}
 */
function createCode() {
    var code = "";
    var codeLength = 4; //验证码的长度
    var checkCode = document.getElementById("checkCode");
    var codeChars = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'); //所有候选组成验证码的字符，当然也可以用中文的
    for (var i = 0; i < codeLength; i++) {
        var charNum = Math.floor(Math.random() * 52);
        code += codeChars[charNum];
    }
    return code;
}

/**
 * 时间格式化
 * @param time    当前时间毫秒
 * @param format  格式化输出格式  yyyy-MM-dd HH:mm:ss
 * @constructor
 */
function MyTimeFromat(time, format) {
    var t = new Date(time);
    var tf = function (i) {
        return (i < 10 ? '0' : '') + i
    };
    return format.replace(/yyyy|MM|dd|HH|mm|ss/g, function (a) {
        switch (a) {
            case 'yyyy':
                return tf(t.getFullYear());
                break;
            case 'MM':
                return tf(t.getMonth() + 1);
                break;
            case 'mm':
                return tf(t.getMinutes());
                break;
            case 'dd':
                return tf(t.getDate());
                break;
            case 'HH':
                return tf(t.getHours());
                break;
            case 'ss':
                return tf(t.getSeconds());
                break;
        }
    });
}

/**
 * 数组是否包含某个元素
 * @param arr
 * @param obj
 * @returns {boolean}
 */
function inArray(arr, obj) {
    var i = arr.length;
    while (i--) {
        if (arr[i] == obj) {
            return true;
        }
    }
    return false;
}


/**
 * 删除数组中包含的某个元素
 * @param arr
 * @param obj
 * @returns {boolean}
 */
function delArray(arr, obj) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] == obj) {
            arr.splice(i, 1)
        }
    }
    return arr
}


function loginAccount() {
    layui.use('layer', function () {
        var layer = layui.layer;
        layer.open({
            type: 2,
            title: false,
            closeBtn: 0, //不显示关闭按钮
            shade: 0.2,
            area: ['446px', '372px'],
            anim: 2,
            shadeClose: true, //开启遮罩关闭
            content: ['/home/index/loginTpl', 'no'],
        });
    });
}


var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var base64DecodeChars = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);

/**
 * base64编码
 * @param {Object} str
 */
function base64Encode(str) {

    var out, i, len;
    var c1, c2, c3;
    len = str.length;
    i = 0;
    out = "";
    while (i < len) {
        c1 = str.charCodeAt(i++) & 0xff;
        if (i == len) {
            out += base64EncodeChars.charAt(c1 >> 2);
            out += base64EncodeChars.charAt((c1 & 0x3) << 4);
            out += "==";
            break;
        }
        c2 = str.charCodeAt(i++);
        if (i == len) {
            out += base64EncodeChars.charAt(c1 >> 2);
            out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
            out += base64EncodeChars.charAt((c2 & 0xF) << 2);
            out += "=";
            break;
        }
        c3 = str.charCodeAt(i++);
        out += base64EncodeChars.charAt(c1 >> 2);
        out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
        out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));
        out += base64EncodeChars.charAt(c3 & 0x3F);
    }
    return out;
}

/**
 * base64解码
 * @param {Object} str
 */
function base64Decode(str) {
    var c1, c2, c3, c4;
    var i, len, out;
    len = str.length;
    i = 0;
    out = "";
    while (i < len) {
        /* c1 */
        do {
            c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
        }
        while (i < len && c1 == -1);
        if (c1 == -1)
            break;
        /* c2 */
        do {
            c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
        }
        while (i < len && c2 == -1);
        if (c2 == -1)
            break;
        out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));
        /* c3 */
        do {
            c3 = str.charCodeAt(i++) & 0xff;
            if (c3 == 61)
                return out;
            c3 = base64DecodeChars[c3];
        }
        while (i < len && c3 == -1);
        if (c3 == -1)
            break;
        out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));
        /* c4 */
        do {
            c4 = str.charCodeAt(i++) & 0xff;
            if (c4 == 61)
                return out;
            c4 = base64DecodeChars[c4];
        }
        while (i < len && c4 == -1);
        if (c4 == -1)
            break;
        out += String.fromCharCode(((c3 & 0x03) << 6) | c4);
    }
    return out;
}

//調取存儲的 Appid
// data => seller
function getAppId(data) {
    if (data.wechats.length > 0) {
        var appid = getLocalStorage('wx_' + data.main.uuid + '_' + data.id);
        var type;
        var name;
        if (isNull(appid)) {
            appid = data.wechats[0].appid;
            type = data.wechats[0].type;
            name = data.wechats[0].name;
            setLocalStorage('wx_' + data.main.uuid + '_' + data.id, appid)
        } else {
            for (var i = 0; i < data.wechats.length; i++) {
                if (appid == data.wechats[i].appid) {
                    type = data.wechats[i].type;
                    name = data.wechats[i].name;
                }
            }
        }
    }
    return [appid, type, name]

}

/**
 * 字符串是否包含
 */
function isContains(str, substr) {
    if (!str || !substr) {
        return false;
    }
    return str.indexOf(substr) >= 0;
}

/**
 * 金钱显示 (分) 分转元
 */
function toNum(num) {
    num = parseInt(num);
    if (num === 0) {
        return '0.00'
    }
    if (num == '') {
        return num
    }
    var leng = num.toString().length;
    if (leng == 2) {
        num = '0.'.concat(num);
        return num
    } else if (leng == 1) {
        num = '0.0'.concat(num);
        return num
    } else {
        var a = num.toString().substring(0, leng - 2);
        var b = num.toString().substring(leng - 2, leng);
        var sum = a.concat('.').concat(b);
        return sum
    }
}

/**
 * 金钱显示 (元) 元转分
 */
function doNum(num) {
    num = num + '';
    var n = num.split('.')[0];
    if (!n) {
        n = 0;
    }
    var m = num.split('.')[1];
    if (!m || m.length == 0) {
        m = '00';
    } else if (m.length == 1) {
        m = m + '0';
    }
    num = n + '.' + m;
    num = num.replace('.', '');
    num = parseInt(num);
    return num;
}

/**
 *  0=>PC 1=>android  2=>ios
 * @returns {number}
 */
function deviceType() {
    var sUserAgent = navigator.userAgent.toLowerCase();
    var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
    var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
    var bIsMidp = sUserAgent.match(/midp/i) == "midp";
    var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
    var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
    var bIsAndroid = sUserAgent.match(/android/i) == "android";
    var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
    var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
    if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7
        || bIsUc || bIsAndroid || bIsCE || bIsWM) {
        if (bIsAndroid) {
            return 1;
        } else if (bIsIphoneOs) {
            return 2;
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}


var SB = 'qinchacha666_666';  //kkkkkkk
/**
 * aes解密方法
 * @param data 密文
 * @returns  明文
 */
function AESDecrypt(data) {

    //密钥
    var newkey = CryptoJS.enc.Utf8.parse(SB);
    var decrypted = CryptoJS.AES.decrypt((data), newkey,
        {
            mode: CryptoJS.mode.ECB,
            padding: CryptoJS.pad.Pkcs7
        });
    var decryptedStr = decrypted.toString(CryptoJS.enc.Utf8);
    return decryptedStr.toString();
}

/**
 * aes加密方法
 * @param word  明文   字符串或者json
 * @returns  密文
 */
function AESEncrypt(word) {
    var key = CryptoJS.enc.Utf8.parse(SB); //16位
    var encrypted = '';
    if (typeof (word) == 'string') {
        var srcs = CryptoJS.enc.Utf8.parse(word);
        encrypted = CryptoJS.AES.encrypt(srcs, key, {
            mode: CryptoJS.mode.ECB,
            padding: CryptoJS.pad.Pkcs7
        });
    } else if (typeof (word) == 'object') {//对象格式的转成json字符串
        var data = JSON.stringify(word);
        var srcs = CryptoJS.enc.Utf8.parse(data);
        encrypted = CryptoJS.AES.encrypt(srcs, key, {
            mode: CryptoJS.mode.ECB,
            padding: CryptoJS.pad.Pkcs7
        })
    }
    return encrypted.toString();
}

/**
 * 计算剩余时间   单位秒
 * @param startTime
 * @param intervalTime
 */
function countDownTime(startTime, intervalTime) {
    var now = parseInt(new Date().getTime() / 1000);
    if (startTime >= now) {
        return [0, 0, 0, 0];
    }

    var count = intervalTime - (now - startTime)
    var day = '' + parseInt(count / (60 * 60 * 24));
    if (day.length < 2) {
        day = '0' + day
    }
    var h = '' + parseInt(count / (60 * 60)) % 24;
    if (h.length < 2) {
        h = '0' + h
    }
    var m = '' + parseInt(count / 60) % 60;
    if (m.length < 2) {
        m = '0' + m
    }
    var s = '' + parseInt(count - day * 24 * 60 * 60 - h * 60 * 60 - m * 60);
    if (s.length < 2) {
        s = '0' + s
    }
    return [day, h, m, s];
}


// }

//UTF-16 ===》utf-8 base64加密
function utf16to8(str) {
    var out, i, len, c;
    out = "";
    len = str.length;
    for (i = 0; i < len; i++) {
        c = str.charCodeAt(i);
        if ((c >= 0x0001) && (c <= 0x007F)) {
            out += str.charAt(i);
        } else if (c > 0x07FF) {
            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));
            out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));
            out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));
        } else {
            out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));
            out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));
        }
    }
    return out;
}

//UTF-8 ===》utf-16 base64解碼
function utf8to16(str) {
    var out, i, len, c;
    var char2, char3;
    out = "";
    len = str.length;
    i = 0;
    while (i < len) {
        c = str.charCodeAt(i++);
        switch (c >> 4) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
                // 0xxxxxxx
                out += str.charAt(i - 1);
                break;
            case 12:
            case 13:
                // 110x xxxx  10xx xxxx
                char2 = str.charCodeAt(i++);
                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
                break;
            case 14:
                // 1110 xxxx 10xx xxxx 10xx xxxx
                char2 = str.charCodeAt(i++);
                char3 = str.charCodeAt(i++);
                out += String.fromCharCode(((c & 0x0F) << 12) |
                    ((char2 & 0x3F) << 6) |
                    ((char3 & 0x3F) << 0));
                break;
        }
    }
    return out;
}

/**
 *
 * @param hour  获取时间段起始和结束时间戳
 * @param type  0 今天 1明天
 */
function getTime(hour, type) {
    if (hour < 0 || hour > 23) {
        return false;
    }
    if (!type) {
        type = 0
    }
    var now = new Date().setHours(0, 0, 0, 0);
    var time = parseInt(now / 1000);

    if (type != 0) {
        time += 3600 * 24;
    }
    var date = new Date(time * 1000).setHours(hour, 0, 0, 0);
    var start = date / 1000;
    var end = start + 3600;
    return {
        start: start,
        end: end,
    };
}

//复制
function copyText(text) {
    var textarea = document.createElement("textarea");
    textarea.style.position = 'fixed';
    textarea.style.top = 0;
    textarea.style.left = 0;
    textarea.style.border = 'none';
    textarea.style.outline = 'none';
    textarea.style.resize = 'none';
    textarea.style.background = 'transparent';
    textarea.style.color = 'transparent';
    textarea.value = text;
    document.body.appendChild(textarea)
    textarea.select()
    try {
        var msg = document.execCommand('copy') ? '复制成功' : '复制失败~'
        layer.msg(msg);
    } catch (err) {
        layer.msg('复制失败');
    }
    document.body.removeChild(textarea)
}


/**
 * thhp 转出https
 * @param url
 * @returns {*}
 */
function toHttps(url) {
    var temp = 'http://qinchacha.aoss-cn-hangzhou.aliyuncs.com';
    if (url && url.indexOf(temp) == 0) {
        url = url.replace(temp, 'https://iqfan.cn');
    }
    return url;
}

/**
 * iqfan.cn 添加图片处理
 * @param url
 * @returns {*}
 */
function iqfanPic(url, type) {
    if (!type) {
        type = 0;
    }
    var temp = 'https://iqfan.cn';
    if (url && url.indexOf(temp) >= 0 && type == 0) {
        url = url + '?x-oss-process=style/thumb400';
    } else if (url && url.indexOf(temp) >= 0 && type == 1) {
        url = url + '?x-oss-process=style/thumb800';
    }
    return url;
}

/**
 * img 全屏弹出层
 * @param event 目标对象
 */
function floatImg(event) {
    var div = document.createElement('div');
    div.style.cssText += ";position: fixed;left:0px;right:0px;top:0px;bottom:0px;" +
        "height: 100%;width: 100%;z-index: 9999999;background: rgba(255, 255, 255, 0.8);" +
        "display: none;flex-direction: row;align-items: center;justify-content: center;";
    div.onclick = function () {
        floatfadeOut(div)
    }
    div.innerHTML = '<img src=' + event.src + ' ' +
        'style="cursor:zoom-out;height:100%;width:auto;z-index:10000000;">'
    document.body.appendChild(div);
    floatFadeIn(div);
}

function vueFloatImg(img) {
    var div = document.createElement('div');
    div.style.cssText += ";position: fixed;left:0px;right:0px;top:0px;bottom:0px;" +
        "height: 100%;width: 100%;z-index: 9999999;background: rgba(255, 255, 255, 0.8);" +
        "display: none;flex-direction: row;align-items: center;justify-content: center;";
    div.onclick = function () {
        floatfadeOut(div)
    }
    div.innerHTML = '<img src=' + img + ' ' +
        'style="cursor:zoom-out;height:100%;width:auto;z-index:10000000;">'
    document.body.appendChild(div);
    floatFadeIn(div);
}

//进入淡入
function floatFadeIn(name, num, time) {
    name.style.display = 'flex';
    time = time || 40;//速率
    num = num = 0.6;//初始透明度
    name.childNodes[0].style.opacity = num;
    var setD = setInterval(function () {
        if (num >= 1) {
            return clearInterval(setD)
        }
        num = num + 0.05;
        name.childNodes[0].style.opacity = num;
    }, time)
}

//进入淡出
function floatfadeOut(name, num, time) {
    time = time || 40;//速率
    num = num || 1;//初始透明度
    var setD = setInterval(function () {
        if (num <= 0.6) {
            document.body.removeChild(name);
            return clearInterval(setD)
        }
        num = num - 0.05;
        name.childNodes[0].style.opacity = num;
    }, time)
}

//缩略图地址转化
function getSmallUrl(url, width) {
    if (width) {
        return url + '?x-oss-process=style/thumb' + width
    } else {
        return url + '?x-oss-process=style/thumb100'
    }
}



/**
 * 判断是否是 移动端
 * @returns {boolean}
 */
function isMobile() {
    let mobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i)
    return mobile != null
}
